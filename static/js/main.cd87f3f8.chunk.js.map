{"version":3,"sources":["components/Header.js","components/ClassName.js","components/GroupBlock.js","components/FinalBlock.js","components/AddGroup.js","components/GradeForm.js","components/GradeCalculator.js","components/GradeBlock.js","components/AddClass.js","App.js","reportWebVitals.js","index.js"],"names":["Header","ClassName","className","htmlFor","style","fontSize","type","name","GroupBlock","props","useState","classNumber","classNum","groupNum","onKeyDown","event","keyCode","groupCount","console","log","addGroup","FinalBlock","AddGroup","onClick","e","GradeForm","setGroupCount","groups","setGroups","reWriteGroups","parseInt","Object","keys","map","key","class","GradeCalculator","msg","content","setContent","grades","document","querySelectorAll","gradeWeights","finalWeight","querySelector","value","grade","i","length","scoresNeeded","entries","A","B","C","D","F","scoreNeeded","Math","round","renderContent","GradeBlock","AddClass","runOnce","setRunOnce","addClass","App","classes","setClasses","classCount","setClassCount","localStorage","getItem","error","beenClicked","reWriteClasses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cd87f3f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n    const element = (\r\n        <h1>Final Calculator</h1>\r\n        );\r\n    return (\r\n        element\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction ClassName(){\r\n    return(\r\n        <div className='className'>\r\n            <label htmlFor='class-name' style={{fontSize:'14px'}}>Class Name:</label><br/>\r\n            <input\r\n                className='form-control border rounded-md text-black input-class-name'\r\n                type='input'\r\n                name='input-class-name'/>\r\n            <br/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ClassName;","import React, { useState } from 'react';\r\n\r\n\r\nfunction GroupBlock(props){\r\n    const [classNum] = useState(props.classNumber ?? \"Null\");\r\n    /*const [name,setName] = useState('');\r\n    const [grade,setGrade] = useState('');\r\n    const [weight, setWeight] = useState('');*/\r\n    const checkKeyUp = (event) => {\r\n        if (event.keyCode == 9 && props.groupNum == props.groupCount - 1){\r\n            console.log(\"Woah there buddy\")\r\n            props.addGroup();\r\n        }\r\n    } \r\n    return (\r\n        <div className={`grid grid-cols-3 space-x-1 class-${classNum}-group-${props.groupNum}`}>\r\n            <div>\r\n                <div className='groupLabel' style={{fontSize:'14px'}}>Label: </div>\r\n                <div className='groupInput' style={{fontSize:'14px'}}>\r\n                    <input\r\n                        className='group-name-input border border-gray p-0.5 rounded-md w-4/5 md:w-max text-black'\r\n                        type='input'\r\n                        name='group-name'\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='groupLabel' style={{fontSize:'14px'}}>Grade: </div>\r\n                <div className='groupGrade' style={{fontSize:'14px'}}>\r\n                    <input\r\n                        className='group-grade-input border border-gray p-0.5 rounded-md w-16 md:w-max text-black'\r\n                        type='input'\r\n                        name='group-grade'\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='groupLabel' style={{fontSize:'14px'}}>Weight: </div>\r\n                <div className='groupWeight' style={{fontSize:'14px'}}>\r\n                    <input\r\n                        className='group-weight-input border border-gray p-0.5 rounded-md w-16 md:w-max text-black'\r\n                        type='input'\r\n                        name='group-weight'\r\n                        onKeyDown={checkKeyUp}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupBlock;","import React, { useState } from 'react';\r\n\r\nfunction FinalBlock(props){\r\n    const [classNum] = useState(props[\"classNumber\"] ?? \"Null\");\r\n    return(\r\n        <div className={'final-class-' + classNum}>\r\n        <div>\r\n            <div className='groupLabel' style={{fontSize:'14px'}}>Final Weight:</div>\r\n        </div>\r\n        <div>\r\n            <div className='finalWeight' style={{fontSize:'14px'}}>\r\n                <input\r\n                    className='final-weight-input border rounded-md text-black'\r\n                    type='input'\r\n                    name='final-weight'\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default FinalBlock;","import React from 'react';\r\n\r\nfunction AddGroup(props){\r\n    const handleClick = (e) =>{\r\n        props.addGroup();\r\n    }\r\n    return(\r\n        <div onClick={handleClick} className='bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow text-xs my-2 w-1/4 mx-auto'>Add a group.</div>\r\n        )\r\n}\r\n\r\nexport default AddGroup;","import React, { useState } from 'react';\r\nimport GroupBlock from './GroupBlock';\r\nimport FinalBlock from './FinalBlock'\r\nimport AddGroup from './AddGroup';\r\n\r\nfunction GradeForm(props){\r\n    const [classNum] = useState(props.classNumber ?? \"Null\");\r\n    const [groupCount,setGroupCount] = useState(1);\r\n    const [groups,setGroups] = useState({});\r\n\r\n    const addGroup = (e) =>{\r\n        let reWriteGroups = groups;\r\n        reWriteGroups[parseInt(groupCount)] = {}\r\n        setGroupCount(groupCount + 1);\r\n        setGroups(reWriteGroups);\r\n        console.log(groups)\r\n    }\r\n    return (\r\n        <div className='grade-form'>\r\n            <form>\r\n                <div className='class1 content-center'>\r\n                    {Object.keys(groups).map(([key,value]) => <GroupBlock classNumber={classNum} key={key} groupNum={key} groupCount={groupCount} class={props.class} addGroup={addGroup}/>)}\r\n                    <AddGroup classNumber={classNum} addGroup={addGroup}/>\r\n                    <div className='finalGroup'>\r\n                        <FinalBlock classNumber={classNum}/>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default GradeForm;","import React, { useState } from 'react'\r\n\r\nfunction GradeCalculator(props){\r\n\r\n    const [classNum] = useState(props.classNumber ?? \"Null\");\r\n    const [msg] = useState('Final score needed for following grades');\r\n    const [content, setContent] = useState('Uncalculated');\r\n\r\n\r\n    const renderContent = (e) => {\r\n        let gradeLetters = {\r\n            A : [90,100],\r\n            B : [80,99.99],\r\n            C : [70,79.99],\r\n            D : [60,69.99],\r\n            F : [0,59.99]\r\n        }\r\n        let grades = document.querySelectorAll(\".class-\" + classNum + ' .group-grade-input');\r\n        let gradeWeights = document.querySelectorAll(\".class-\" + classNum + ' .group-weight-input');\r\n        let finalWeight = document.querySelector(\".class-\" + classNum + ' .final-weight-input').value < 1 ? document.querySelector(\".class-\" + classNum + ' .final-weight-input').value : document.querySelector(\".class-\" + classNum + ' .final-weight-input').value / 100;\r\n        let grade = 0;\r\n        for (let i = 0; i < grades.length; i++) {\r\n            let groupGrade = grades[i].value;\r\n            let groupWeight = gradeWeights[i].value < 1 ? gradeWeights[i].value : gradeWeights[i].value / 100;\r\n            grade += groupGrade * groupWeight;\r\n        }\r\n        let scoresNeeded = {};\r\n        for(const [key,value] of Object.entries(gradeLetters)){\r\n            let scoreNeeded = Math.round((value[0] - grade)/finalWeight * 100) / 100;\r\n            scoresNeeded[key] = scoreNeeded;\r\n        }\r\n        return (\r\n            <ul>\r\n                {Object.keys(scoresNeeded).map(key => (\r\n                    <li><b>{key}</b> {scoresNeeded[key]}</li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        setContent(renderContent());\r\n    }\r\n\r\n    return (\r\n        <div className='col-start-2'>\r\n            <h2 style={{fontSize:'20px'}}>Click the button to calculate grade</h2>\r\n\r\n            <p style={{fontSize:'16px'}}>{msg}</p>\r\n\r\n            <div style={{fontSize:'16px'}}>{content}</div>\r\n            <button className=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\" onClick={handleClick}>\r\n            Click here to Calculate Grade\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GradeCalculator;","import React, { useState } from 'react';\r\nimport ClassName from './ClassName';\r\nimport GradeForm from './GradeForm';\r\nimport GradeCalculator from './GradeCalculator';\r\nimport StoreData from './StoreData';\r\n\r\nfunction GradeBlock(props){\r\n\r\n    const [classNum] = useState(props.classNumber ?? \"Null\");\r\n    console.log(props.class);\r\n    return(\r\n        <div className={`grade-block class-${classNum}   border border-solid`}>\r\n            <h2>Class {classNum}</h2>\r\n            <ClassName classNumber={classNum} class={props.class}/>\r\n            <GradeForm classNumber={classNum} class={props.class}/>\r\n            <div className='grid grid-cols-3 flex items-end justify-center'>\r\n                {/* <StoreData classNumber={classNum}/> */}\r\n                <GradeCalculator classNumber={classNum}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GradeBlock;","import React, { useState } from 'react';\r\n\r\n\r\nfunction AddClass(props){\r\n    const [runOnce,setRunOnce] = useState(false);\r\n\r\n    const handleClick = (e) =>{\r\n        props.addClass();\r\n        setRunOnce(true);\r\n    }\r\n\r\n    return(\r\n        <div className={'flex items-center justify-center border border-solid ' + (!runOnce ? 'col-start-2 col-span-1' : '')}><button onClick={handleClick} className='bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow'>Click me to add a class!</button></div>\r\n    )\r\n}\r\n\r\nexport default AddClass;","import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport GradeBlock from './components/GradeBlock';\r\nimport AddClass from './components/AddClass';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\tconst [classes,setClasses] = useState({});\r\n\tconst [classCount,setClassCount] = useState(1);\r\n\ttry {\r\n\t\tlet count = localStorage.getItem(classCount);\r\n\t\tif(count == null){\r\n\t\t\tthrow 'No Count in Local Store';\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n\r\n\tconst addAClass = () =>{\r\n\t\tlet reWriteClasses = classes;\r\n\t\treWriteClasses[parseInt(classCount)] = {};\r\n\t\tsetClassCount(classCount + 1);\r\n\t\tsetClasses(reWriteClasses);\r\n\t\tconsole.log(classCount);\r\n\t\tconsole.log(classes)\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<Header />\r\n\t\t\t</header>\r\n\t\t\t<div className='body grid md:grid-cols-3 h-3/6'>\r\n\t\t\t\t{Object.keys(classes).map(([key,value]) => <GradeBlock key={key} classNumber={key} class={classes[key]}/>)}\r\n\t\t\t\t<AddClass classNumber={classCount} beenClicked={true} addClass={addAClass}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}